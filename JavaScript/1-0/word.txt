ITとは？

ITとは、「Information Technology」の頭文字をとった単語です。パソコンやスマートフォンなどの情報技術の総称を意味します。ITという単語はパソコン、インターネットを表すだけでなくセキュリティや情報処理なども含み広義的な意味で使われます。


OS

OS オペレーティングシステム（Operating System, OS）は、コンピュータにおいて、ハードウェアを機能毎に抽象化したインターフェースを利用者またはアプリケーションソフトウェアに提供するコンピュータプログラムである。

Windows Windowsとは、米マイクロソフト（Microsoft）社が開発・販売している、コンピュータのオペレーティングシステム（OS）製品のシリーズ名。単にWindowsといった場合にはパソコン向けの製品系列を指すことが多いが、他にサーバ向けや携帯機器向けなども展開している。

macOS(Mac OS X) Mac OS Xとは、Apple Computer社が開発したMacintosh用オペレーティングシステム（OS）「Mac OS」のシリーズのうち、2001年3月に発売されたバージョンの名称である。

UNIX Unix（ユニックス）とは、現存する中で最も古いOSです。しかし、古いながらもWindowsやMacと同様に開発の分野の最前線で活躍しています。大きな特徴は、OSの安定性が高く、ネットワーク機能に優れているということです。そのため、長時間にわたって動かす必要のあるコンピューターなどに利用されています。

Linux Linux（リナックス）はUnixを参考に作られているUNIX系OSです。パソコンやスマートフォン、そして多くのサーバーで利用されています。大きな特徴は、フリーソフトウエアとして公開されていること、誰でも自由に開発、入手、使用、改変、再配布などができることです。また、Linuxは他のOSと比べて、低い性能のコンピューターでも軽快に動作するという強みを持っています。他にも、ネットワーク機能やセキュリティーに優れ、非常に安定しているという特徴も持ちます。


言語・環境

HTML HTMLとは、Hyper Text Markup Language（ハイパーテキスト・マークアップ・ランゲージ）の略で、Webページを作るための最も基本的なマークアップ言語のひとつです。普段、私たちがブラウザで観ているWebページのほとんどが、HTMLで作られています。

CSS CSS（Cascading Style Sheets、カスケーディング・スタイル・シート）とは、ウェブページのスタイルを指定するための言語です。 ワープロソフトなどで作成される文書も含めて、文書のスタイルを指定する技術全般をスタイルシートといいます。 HTMLやXHTMLなどで作成されるウェブページにスタイルを適用する場合には、スタイルシート言語の1つであるCSSが一般的に利用されています。

MySQL MySQLとは、世界でもっとも利用されている「データベース管理システム」です。大容量のデータに対しても高速で動作し、便利な機能がたくさんあるので、非常に実用性が高くなっています。また、オープンソースなので非商用利用であれば無償で使用できるため、初心者でも導入しやすく扱いやすいため非常に人気の高いデータベース管理システムです。

PHP PHPとは動的にWebページを生成することができるサーバーサイドのスクリプト言語です。他のプログラミング言語と比較して仕様や文法が簡単なため習得しやすいと言われています。またMySQLなどのデータベースとの連携が容易なことなどから、WordPressを含めたWebアプリケーションの開発にもよく使われる有名なスクリプト言語でもあります。

JavaScript JavaScriptの最も一般的な使われ方がWEBページに動きを付けることです。何枚かの写真をスライドさせて表示したり、ランキングやバナー広告などを表示するサイドバーを出し入れしたり、ユーザーが操作して表示を替えれるWebページはJavaScriptなどで制作されています。

jQuery jQueryとは、JavaScriptのライブラリ（便利な機能を使いやすくしたもの）の一種です。jQueryが出る前からJavaScript製のライブラリは幾つか開発されていましたが、jQueryが発表されるとそれらのライブラリを抑えて急速に使用されるようになりました。

Apache Apacheとは、世界的に最も普及しているWebサーバ（HTTPサーバ）ソフトウェアの一つ。Apache Software Foundation（Apacheソフトウェア財団）が開発しており、オープンソースソフトウェアとして公開している。

Bootstrap BootstrapはHTML／CSS／JavaScriptから構成される最も有名なWEBフレームワークです。（そもそもWEBフレームワークって何？という方は、先にこちらの記事をご覧ください。）


エンジニアなど

SE SEの仕事は、顧客の要求から仕様を決定し、大まかな設計をするまでの情報システム開発における上流工程を担当します。その際、予算や人員、進捗管理などのマネジメント業務も大切な仕事です。

PG プログラマー（PG）とは、Webシステムや業務システムなどに必要な機能を、コードといわれるプログラミング言語を使って実装する職種であり、動作テストなどもその業務範疇になります。システム開発は、どのような機能を持つシステムにするのか、顧客の要望に沿って仕様を決定してから、機能を実装するプログラミングに取りかかります。仕様の決定以降の業務を主に担当するのがプログラマーです。

Webデザイナー Webデザイナーの仕事は、短く説明するならば「Webサイトの見た目の部分をデザインする人」と言えます。大きく分けて「クライアントからの依頼を元とする受託制作」と「自社サービスのWeb制作」があります。さらに受託制作の依頼主、メーカー企業等からの直接依頼または、代理店からの依頼となります。メーカー企業等からの依頼を「直受け」、代理店経由の依頼を「孫受け」などと呼ぶこともあります。


ユーザーインターフェース


CUI　CUIとは、キーボードに入力されるコマンドによって、オペレーティング・システム上の操作を行う、ユーザーインターフェースの事を言う。コンピュータユーザーに対しての情報が、文字で表示される。

GUI Graphical User Interfaceの略。コンピューターの画面上に表示されるウィンドウやアイコン、ボタン、プルダウンメニューなどを使い、マウスなどのポインティングデバイスで操作できるインターフェース。


ファイルとディレクトリ

ファイル ファイルとは、コンピュータにおけるデータの管理単位の一つで、ストレージ装置（外部記憶装置）などにデータを記録する際に利用者やOSから見て最小の記録単位となるデータのまとまり。

ディレクトリ　ディレクトリ、PCやIT用語では「ファイルを整理したり、分類したりができる保管場所」という意味になります。別名が「フォルダ」になります。ディレクトリとフォルダの意味は同じ様に思えますが、全く同一ではありません。ディレクトリは「CUI」で使われ、フォルダは「GUI」で使われます。保管するだけではなく、整理整頓され種類ごとに分類され一覧ができるものが「ディレクトリ」になります

ルート・ディレクトリ　ルートディレクトリとは、コンピュータがストレージ（外部記憶装置）の内容を整理するファイルシステムにおいて、装置やシステム全体の最上位のディレクトリのこと。すべてのファイルやディレクトリはルートディレクトリを根（root）とする木構造のディレクトリ階層のいずれかに収まっている。

カレント・ディレクトリ　カレントディレクトリとは、実行中のソフトウェアなどがストレージ（外部記憶装置）のファイルシステム中で現在位置として指し示しているディレクトリのこと。相対パスでファイルやディレクトリなどを指定する際の基準の位置となる。

パス パスとは、小道、道筋、進路、通り道などの意味を持つ英単語で、ITの分野では、コンピュータ内で特定の資源の所在を表す文字列のことをパスという。ストレージ（外部記憶装置）内でファイルやディレクトリ（フォルダ）の位置を表すのに用いられるが、他の用途でも使われる。

絶対パス 絶対パスとはフルパスとも呼ばれており、ルートディレクトリと呼ばれる階層構造の頂点から目的地までの経路を表しています。ユーザが現在どのフォルダで作業中であっても、常に同じスタート地点から、常に同じ経路の表示になります。

相対パス 相対パスとは、ユーザが現在作業しているフォルダから目的のフォルダまでの経路を表します。スタート地点が異なると、当然この経路も異なります。


各種プロトコル

HTTP HTTPとは「Hyper Text Transfer Protocol（ハイパーテキストトランスファープロトコル）」の事です。ホームページのデータは文字だけでなく画像や動画などがあります。これらのデータをサーバとクライアントの間で通信するときの通信規約（プロトコル）がHTTPです。

FTP FTP（File Transfer Protocol）とは、ネットワーク上でファイル等の転送を行う通信プロトコルの1つです。簡単に言うと、FTPとはファイルを転送するときに使うプロトコル＝約束事のことです。

HTTPS HTTPSに対応しているサーバでは、ホームページのデータをやり取りする際に暗号化されて通信するようになります。通信内容を暗号化することで、安全にWebの情報をやり取りすることができます。

SSL SSL（Secure Sockets Layer）とは、インターネット上におけるウェブブラウザとウェブサーバ間でのデータの通信を暗号化し、送受信させる仕組みのことです。

SSH SSHとは、Secure Shell（セキュアシェル）の略称で、リモートコンピュータと通信するためのプロトコルです。
認証部分を含めネットワーク上の通信がすべて暗号化されるため、安全に通信することができます。


ポート、ポート番号　ポート番号とは、インターネットで標準的に用いられるプロトコル（通信規約）であるTCP/IPにおいて、同じコンピュータ内で動作する複数のソフトウェアのどれが通信するかを指定するための番号。単に「ポート」と略されることもある。

HTTP、FTP、SSHの各ポート番号　TCP 80 : HTTP TCP 20 : FTP (データ) TCP 21 : FTP (制御) TCP 22 : SSH

ファイアウォール　「防火壁」を意味するファイアウォールは、簡単に言うとネットワークとネットワークに間に立ち不正アクセスをブロックするためのシステムです。サイバー攻撃者は常に外部ネットワークから内部ネットワークへの侵入を目論んでおり、さまざまな手法で侵入を試みます。ファイアウォールはそんな外部ネットワークからのアクセスを常に監視して、不正アクセスがないかをチェックしてくれているガードマンのようなものなのです。

TCP TCPとは、インターネットなどのネットワークで、IP（Internet Protocol）の一段階上位層のプロトコル（通信規約）として標準的に使われるものの一つ。


IPアドレス


IPアドレス IPアドレス（Internet Protcol Adress）とはネットワーク上にある機器を識別するための数値です。通信相手を間違わないために用いられており、ネットワーク上の住所や電話番号のような役割をしています。

グローバルIPアドレス グローバルIPアドレスとは、インターネットに接続する際に利用されるIPアドレスで、（インターネットに接続している）機器（PC等）の一台一台に、一意に割り振られる番号になります。

プライベートIPアドレス 組織内部のネットワークのアドレスとして自由に利用できる IP アドレス。プライベートアドレスとも言い、外部 （インターネット） への接続が必要ではない組織内部のネットワークアドレスとして自由に利用できる。


ドメイン

ドメイン ドメイン（Domain）とは、簡単にいえばインターネット上での住所のようなものです。インターネットにはたくさんのホームページがあります。それぞれのホームページがURLを持っていますが、このURLの中にドメインが含まれています。

DNS ドメインを管理／運用する上で欠かせない役割を担っているのがDNS（ドメインネームシステム）です。これは、数字を組み合わせたコンピュータの住所である「IPアドレス」を、人が理解しやすい住所へと変換するための仕組みです。

VPN VPN(Virtual Private Network)とは、インターネットなどに接続している利用者の間に仮想的なトンネルを構築し、プライベートなネットワークを拡張する技術です。VPNを利用すれば、物理的に離れている拠点のネットワークを、あたかも自分の拠点と同一ネットワークかのような利便性や安全性で使用できます。

ブリッジ ブリッジとは、通信を行う際に用いるLANの中継機である。ルーター機能を持たない無線LANのアクセスポイント。物理層でデータ通信を行い、該当するあて先にのみデータを送信する。

プロキシサーバー プロキシサーバーとは、内部のネットワークとインターネットの境界で動作し、両者間のアクセスを代理して行うものです。プロキシとは「代理」という意味があります。ネットワーク内におけるインターネットの出入り口をプロキシサーバー経由に限定することで、通信内容を一括してプロキシサーバー側でチェックすることが可能です。クライアントコンピュータは直接インターネットにつながることがなく、不正アクセスや侵入行為を防ぐことができセキュリティ向上目的で用いられます。


電子メール

SMTP Simple Mail Transfer Protocolの略。インターネットなどのTCP / IPネットワークで標準的に用いられる、メールを送信するための通信プロトコルの一つ。

POP POPとは、ポストオフィスプロトコル（Post Office Protocol）の頭文字を取った略称です。
ポストオフィスは郵便局、プロトコルは電子機器間で通信する際の取り決め（通信規約）のこと。

IMAP IMAPは、インターネットメッセージアクセスプロトコル（Internet Message Access Protocol）の頭文字を取った略称です。インターネットを使用してメッセージ（メール）にアクセスする通信規約のことで、メールサーバにあるメールをパソコンなどの端末にはダウンロードせず、メールサーバ上で管理されているメールをメールソフト（メーラー）で閲覧するのが特徴です。


セッションとクッキー

セッション コンピューターネットワークにおけるセッションとは、通信の開始から終了までを指します。クライアントとサーバーで通信を行う場合であれば、クライアントからサーバーへ接続した時点でセッションが始まり、サーバーから切断するとセッションが終了します。この一連の流れを管理することをセッション管理と言います。

クッキー Cookie（クッキー）とは、ホームページを訪問したユーザーの情報を一時的の保存する仕組み、またはそのデータです。ID、パスワード、メールアドレス、訪問回数などがユーザー情報として保存されます。

キャッシュ 訪問した “ ウェブページの情報 ” を一時的に保存する仕組み（またはその一時的なデータそのもの）のことで、よく訪問するページの表示スピードが上がるというメリットがある。


DB（データベース）について

チューニング　チューニングとは、IT業界においてはシステムやプログラムなどを改良し、パフォーマンスの向上を図ることを言う。基本的には「調律」や「同調」を意味する言葉であり、主に音楽業界やテレビ、ラジオ業界で使われるイメージだが、意味合いとしてはほぼ同じだと思ってよい。

スロークエリ　スロークエリログ (Slow query log) は、MySQL で出力できるログの種類の1つです。 SQL の実行時間が指定した時間よりもかかってしまった SQL を全て出力することができます。 これにより、アプリケーション構築時や本番運用時にパフォーマンスのボトルネックとなっている SQL を発見するのに大いに役に立ちます。

インデックス　インデックス（index）とは非常に様々なシーンで用いられる用語で、それぞれ異なる意味で使われます。本来インデックスとは「索引」「見出し」などの意味をもつ言葉で、データベースに関わるシーンで用いられる際には、格納されたデータをより早く検索したり抽出できるように作られる索引データのことを言います。



テストについて

フロー　フローチャート（flowchart）とは、プログラムの流れを設計するための図解術です。別名「流れ図」とも呼ばれており、直感的に理解しやすい構造をしています。プログラマーやSE教育の場では必ず習う重要なものです。

単体テスト　単体テスト（ユニットテストと呼ばれることもあります）は、プログラムを構成する比較的小さな単位（ユニット）が個々の機能を正しく果たしているかどうかを検証するテストです。

結合テスト　結合テストとは、開発中のソフトウェアのテスト手法の一つで、複数のモジュール（部品）を組み合わせて行うテスト。個々のモジュールの単体テスト後に行う。


チケット管理ツール


チケット管理ツール　チケットはRedmine上でタスクを管理するのに使われます。実施すべき作業、修正すべきバグなどの一つ一つのタスクをRedmineのプロジェクトにチケットとして登録します。1件のタスクにつき1件のRedmineのチケットを作成し、タスクの内容・優先度・担当者・期日・進捗状況などを記録できます。

タスク　「タスク」とは、コンピューターが処理するプログラムの処理単位のこと。複数のアプリケーションを起動しながら作業することができ、データの入力や集計、電子メールの送受信など指示した処理が終了するのを待たずに別の処理を行えるため、作業効率が向上する。なお、「マルチタスク（Multitask）」は日本電気株式会社の登録商標である。



バージョン管理

Git gitは、プログラムのソースコードなどの変更履歴を記録・追跡するための分散型バージョン管理システムである。Linuxカーネルのソースコード管理に用いるためにリーナス・トーバルズによって開発され、それ以降ほかの多くのプロジェクトで採用されている。

SourceTree SourceTreeとは、プログラムのソースコードを管理するGitを簡単に扱うためのツールだ。バージョン管理システムのGUIだ。しかも、GitとMercurialに対応している。それで、基本的な使い方を学べばバージョン管理システムは異なっても操作は同じになる。

SVN Subversionとは、著名なオープンソースのバージョン管理システムの一つ。複数の開発者が共同で一つのソフトウェアを開発する際などに、ソースコードやドキュメントを管理するのに用いられる。CVS（Concurrent Versions System）を参考に開発され、基本的なコマンドなどはCVSと共通になっている。

コンフリクト 競合とは、複数のプログラムが並行して動作するコンピュータシステム内において、複数のタスクが同時に同じデータファイルやデータベースにアクセスしようと争うことである。

デグレ デグレードとは、新しいバージョンのソフトウェアの品質が、以前より悪くなること。また、以前修正した不具合やバグが再発・復活すること。また、新しいファイルなどを古い内容で上書きしてしまい、更新内容が失われること。

マージツール MDLファイル中の既存のマップ式を保持しながら，FDLファイル又はDTDファイルの変更内容をMDLファイルにマージする機能です。マージ機能を使用することで，再マッピングの作業を最小限に抑えることができます。


その他

ロジック プログラミングでは、処理の流れや手順、プログラムが体現する論理のことをロジックという場合がある。ある特定の問題を解く手順を、単純な計算や操作の組み合わせとして定義した「アルゴリズム」（algorithm）とほぼ同じ意味で用いられる。

デバッグ プログラムが仕様や開発者の意図に照らして誤った動作をする際に、そのような動作を引き起こすプログラム上の欠陥、誤りをバグ（bug：虫）という。テストなどによって発見された誤作動・不具合について、その原因やプログラム上での位置を探索・特定し、意図したとおり動作するように修正する作業のことをデバッグという。

開発手法(ウォーターフォール開発、アジャイル開発) ウォーターフォール開発では、工程を「企画」「設計」「実装」「テスト」に分割した上で開発を進めていきます。分かりやすいように「ソフトウェア開発」を例に解説していきます。アジャイル開発とは、システム構築やソフトウェア開発をするときのプロジェクト開発手法です。アジャイルを日本語に訳すと「素早い」「機敏」といった意味になります。アジャイル開発はこれまでの開発手法と比較して開発期間が大幅に短縮されることから、アジャイル(素早い)と名づけられました。短い期間でテストを繰り返してスピーディーに開発していくのが大きな特徴になります。

アルゴリズム アルゴリズムとは、ある特定の問題を解く手順を、単純な計算や操作の組み合わせとして明確に定義したもの。数学の解法や計算手順なども含まれるが、ITの分野ではコンピュータにプログラムの形で与えて実行させることができるよう定式化された、処理手順の集合のことを指すことが多い。

フローチャート図 複雑なプログラムを書くとき、混乱が起きないように処理の手順を図解したもの。流れ図ともいう。フローチャートに使う記号は日本工業規格で決められている。たとえばスタートとエンドは長円形、処理は長方形、流れが杖分かれする所にはひし形を使う。フローチャートを描くと、作業手順が整理され、考えをまとめるのに役立つ。そのため、プログラムの開発用だけではなく、一般の作業管理とか、新製品開発のための流れ図を描く、といった応用もされている。

設計書(外部設計、内部設計)  外部設計は、基本設計や外部設計とも呼ばれ、一般的に外部設計までが上流工程に含まれます。要件定義で決定した機能や性能、制約条件などを基にしてシステムの基本となる設計を行います。操作画面や操作方法、データ出力など、ユーザーから見えるインターフェース部分の仕様を決定したり、セキュリティや運用規定、システム開発のスケジュールや費用などを設計したりと、基本的にユーザーに向けた仕様を設計するのが外部設計です。内部設計では外部設計を基に、システム内部の動作や機能、物理データなど、ユーザーから見えにくい詳細な部分の設計を行います。外部設計とその後に行われる詳細設計の間の工程ですが、内部システムに特化しているため、詳細設計と同じ工程として扱われることもあります。
プログラム機能を単体に分割し、そこで使用する物理データや入出力を設計します。外部設計の結果をプログラミングしやすくするのが内部設計の役割です。

要件定義(要求仕様書)  システム開発で、システムを構築したり修正したりする場合、ＳＥ（システムエンジニア）が設計をして、プログラマーが各プログラムを作成したり、修正したりしてシステム開発が行われますが、そのシステム開発の大もとの指示書的役割として、要求仕様書があります。

システム開発におけるテスト(単体テスト、結合テスト、総合テスト)  単体テストとは、プログラムを検証する作業の中でも、プログラムを手続きや関数といった個々の機能ごとに分割し、そのそれぞれについて動作検証を行う手法のことである。結合テストは、”内部結合テスト“と”外部結合テスト“に分かれる。内部結合テストは、サブシステム内の機能連携を検証する。外部結合テストは、サブシステム間の機能連携や、他システムとの機能連携を検証する。規模の小さいプロジェクトであれば、サブシステム間の機能連携や、他システムとの機能連携が生じない場合もある。場合によっては、外部結合テストは”不要”という判断となることもあるだろう。総合テストは、システム開発会社（ベンダー）側の最終テスト。開発したシステム全体が発注側の要求を満足していることを検証する。要件定義書に基づいて、機能要件および非機能要件に関する不具合を検出する。


テスト仕様書(どのようなもの、項目) テスト仕様書とは、システムやソフトウェアが、クライアントのヒアリングをもとに作り上げた要件定義書の通りに機能するかどうか、テストするポイントをまとめたドキュメントです。具体的には、結合テストや総合テストの工程でどの機能を、どのテスト技法を使ってテストするのか記されています。

バリデーション バリデーションとは、入力されたデータが、あるいはプログラミング言語やマークアップ言語の記述が、規定された文法に即して、または要求された仕様にそって、適切に記述されているかどうかを検証することである。多くの場合、プログラミング言語においてフォームなどに入力された文字列が入力規則に対して妥当に記述されているかどうかを検証する仕組みを指す。記述が妥当でない場合はエラーとして値を返すように設定される。

FW（フレームワーク） アプリケーションを開発するとき、その土台として機能させるソフトウェアのこと。「アプリケーションフレームワーク」とも呼ばれる。「枠組み」「骨組み」「構造」などといった意味があり、土台となるフレームワークに必要な機能を追加し、アプリケーションの開発を進めていくのが一般的。
フレームワークには、Webアプリケーションの作成に利用される「Webアプリケーションフレームワーク」、データのソートや文字列操作、数学関数、テストなどのアプリケーションの機能や性能、操作性を向上させるための「ユーティリティ系フレームワーク」などの種類がある。それぞれ汎用性が高く、機能が充実しているタイプや、軽量で機能が絞り込まれたタイプなど、多種多彩なフレームワークがある。

PHPのFW（フレームワーク）の種類と特徴 

CakePHP CakePHPは「PHP開発者が誰でも素早く快適に開発を行える事」を目標として産み出されたプロトタイピング型のフレームワークです。

Symfony Symfonyでは、各パートで記述する処理内容が明確になっているため、クラス命名規則/継承関係設定について効率的効果的に行うことができます。オブジェクト指向の恩恵を受けやすい点が、大きなメリットになっています。Symfonyの設計思想は、「疎結合」に徹底しています。モジュール単位の独立性が高いため、非常に高い再利用性があります。Symfonyのリリースは定期的に行われており、それに伴って、サポート期間についても明確になっています。業務開発において安心できるポイントです。

CodeIgniter CodeIgniter(コードイグナイター)とは、PHPフレームワークです。軽量高速動作を特徴としており、フル機能のWebアプリケーションを作成できます。

ZendFramework Zend Framework（ゼンドフレームワーク）は、BSDライセンスで提供されているウェブアプリケーションフレームワークです。最大の特徴は、拡張性に優れていること。「コンポーネント」と呼ばれる多数のクラスライブラリが用意されています。Symphony同様、大規模な案件に向いているフレームワークと言えます。改変したコードを非公開にすることも可能とあって、商用利用には向いているフレームワークです。

Phalcon Phalcon（ファルコン）はフルスタックのPHPフレームワークです。C言語を使って実装されていて、高速に動作します。さまざまなベンチマークテストでも、他のフレームワークを大きく凌駕する結果を記録しています。メモリの使用量も少なく、高速性能が重視される案件では有力候補に入ることは間違いないでしょう。拡張性も高いです。習得の難易度は高くはないのですが、まだ新しいフレームワークなので日本語での情報量は多くはありません。

Slim Slim は "マイクロフレームワーク" と呼ばれる、必要最低限の機能のみを提供し、その分速度が出るようにデザインされた軽量なフレームワークで、Symfony や Laravel のような、機能全部乗せで巨大な、いわゆるフルスタックフレームワークとは、導入の目的や用途も異なる場合が多いです。
つくろうとするアプリケーションがそれほど複雑でなく、同時アクセス数が比較的多く見込まれる場合には、マイクロフレームワークが適しているケースが多いです。

Laravel Laravelは、オープンソースのPHPで書かれたWebアプリケーションフレームワークです。 CodeIgniter フレームワークのより高度な代替手段として、2011年にTaylor Otwell によって開発されました。フレームワークは、開発で使用される様々な機能や仕組みをもち、セキュリティ性・メンテナンス性・拡張性を維持するシステムを提供します。 
今や、ソフトウェア開発においてフレームワークを使うのは当たり前になっていますが、中でも、LaravelはPHPのフレームワークの中では比較的新しく、世界的にも人気ナンバーワンの地位を築いています。

Yii Yii は、事実上あらゆる種類のウェブアプリケーションの開発に使うことが出来る汎用のウェブプログラミングフレームワークです。 Yii は、軽量であり、洗練されたキャッシュ機構を持っているため、負荷の高いアプリケーション、例えばポータルサイト、フォーラム、コンテンツマネジメントシステム(CMS)、イーコマースシステム等のアプリケーションに特に向いています。

FuelPHP FuelPHPは、後発のフレームワークであり、いろいろなPHPフレームワークの長所を生かしています（いいとこ取りなのです）。PHP5.3以上を対象に開発された高速で軽量なフレームワークなのです。複雑な設定ファイルに悩まされることがないように設計されています。そのため、フレームワークのルールが複雑で開発作業が停滞することがなく、高度なWebアプリケーションの開発に向いているのです。

Flight Flightは、PHP用の高速/シンプル/拡張可能なイベントベース/コンポーネントベースのオープンソースマイクロフレームワークです。開発者に対して、非同期で独立性の高いコンポーネントを定義する機能を提供しており、デバッグ/テスト/イベントハンドリングなどを容易にするフレームワークです。迅速かつ容易にRESTfulなWebアプリケーションを構築できます。

Silex SilexはSymfonyコンポーネントを元に実装された、PHP言語でWebアプリケーションを開発するためのマイクロフレームワークである。Symfony の成果物であるHttpKernel等の各種パッケージ、依存性注入を行うためのシンプルなDIコンテナ pimple 等で構成されている。

BEAR.Sunday BEAR.Sundayとは、Restful APIの開発を前提としたPHPアプリケーションフレームワークです。最近のアプリケーション開発では、よくAPIっていう言葉が出てきます。今までのように、1つの巨大なアプリケーションに、画面もビジネスロジックも全て詰め込むのではなく、なるべく細かい単位で分割して開発する手法が流行っています。

Kohana KohanaはCodeIgniterから派生して生まれたPHPフレームワークだ。日本では流行っていないため、日本語のドキュメントはない。英語ドキュメントはそこそこ充実している。ライブラリが使いやすく、早く動くことも特徴だ。HMVCを中心に作られている。

Ethna Ethnaは、webアプリケーションを効率的に開発することを可能にします。エラー処理や認証などの定型的な処理を、Ethnaが全てサポートしてくれるためです。開発者は細かいエラー処理や認証などに気を使う必要がなくなり、中心的な機能の開発に集中することができます。そのため、複雑なwebアプリケーションを、これまでとは比較にならないほどわずかな時間で作成することができます。

Ice Framework Ice FrameworkはC拡張モジュールとして作られたPHP用フレームワークです。PHPのC拡張モジュールを簡単に作れるZephirで作られたIce Frameworkが公開されています。

Ajax Ajaxは「Asynchronous JavaScript and XML」の略で、簡単に言うとJavaScriptでサーバー側と非同期通信を行うための技術になります。「Ajax」の技術を活用することで、サーバー側とスムーズなデータのやり取りができるだけでなく、ユーザーに待ち時間を感じさせないレスポンスの高いWeb画面を構築することも可能になるのが大きな特徴です。

API APIとは「Application Programming Interface（アプリケーション・プログラミング・インターフェイス）」の略語であり、「ある1つの機能に特化したプログラムで共有可能なもの」や「ソフトウェアの機能を共有する仕組み」のことです。

LAMP LAMPとは、オープンソースソフトウェアの組み合わせを指す言葉（略称）です。
具体的にはOSのLinux、WebサーバーのApache、データベースのMySQL、プログラミングのPerl、PHP、Pythonを指します。

クラウドサーバー、レンタルサーバー、VPSの違い 
レンタルサーバー（共用サーバー）は、1台の物理サーバーの性能を全て共有して利用します。レンタルサーバーは、しばしばシェアハウスにたとえられます。1台の物理サーバーを複数のユーザーが共有するといわれてもイメージが沸かないかもしれませんが、1つの物件を複数の人がシェアして利用していると考えれば、イメージしやすいと思います。クラウドは1台の物理サーバー（ハイパーバイザー※）の中に仮想的にサーバーを複数作成できます。仮想的に作成されたサーバーなので、これを仮想サーバーと呼びます。レンタルサーバーとは異なり、CPUやメモリはそれぞれの仮想サーバー内で仮想的に作成されます。VPS（Virtual Private Server）は、日本語に訳すと「仮想専用サーバー」となります。１台のサーバーを複数のユーザーで共有する点は共用サーバーと同じですが、VPSでは、仮想的に専用サーバーと同様の自由度・性能を利用できるよう設定されています。

AWS AWSとは、Amazon Web Servicesの略称で、クラウドコンピューティングサービスを提供しています。インターネット通販で有名なAmazonの子会社がサービスを提供しており、AWSはAmazonが提供するWEBサービスの総称として使われています。このAWSは、Amazon自身のインフラを支えるために作られました。世界中から集まる膨大なアクセスに対応するため、日々サーバー機器などの増強を続けていく中で、自社だけではなく、他社にも提供しようというのがスタートです。

プラットフォーム ITの世界でプラットフォームというと特定のアプリケーションから見て、そのアプリケーションが動作するのに必要な環境の事を指します。どのアプリケーションから見るかでプラットフォームの対象は変化し、必ずしも1つのものを指すわけではありません。ITの世界の場合、プラットフォームの大元の土台はOSと言われる場合が多いです。

カバレッジ カバレッジとは、取材範囲、補償範囲、受信範囲、対象範囲、被覆率などの意味を持つ英単語。カバーする範囲、カバー率の意。

エビデンス ITの分野では、システム開発などで、最終検証段階においてシステムが発注どおりに動作していることを示す証拠となる書類やデータなどのことをエビデンスということが多い。稼動中の画面を印刷したものや、システムによって生成されたデータファイル、外部の別のシステムが受信したデータなどが用いられることが多い。

コンパイル コンパイルとは、プログラミング言語で書かれたコンピュータプログラム（ソースコード）を解析し、コンピュータが直接実行可能な形式のプログラム（オブジェクトコード）に変換すること。そのためのソフトウェアをコンパイラ（compiler）という。

バッチ処理 バッチ処理とは、複数のプログラムからなる作業において、あらかじめ一連の手順を登録しておき、まとめて連続的に実行する方式。または、一定期間や一定量ごとにデータをまとめて一括して処理する方式。利用者は起動するプログラムやパラメータ、使用するデータファイルなどを指定したバッチジョブを作成し、システムのジョブスケジューラに起動日時や起動間隔などを登録する。システムは指定された日時や間隔に従ってジョブを起動し、指定されたプログラムを順番に実行する。

デプロイ(意味と方法、FTPソフトの種類) 

意味　デプロイとは、ネットワーク経由で外部から利用するソフトウエアや、ポータルサイトなどのWebによるサービスをユーザーが利用できる状態にすること。

方法　サーバー上の適切な場所にファイルやフォルダを配置して、サービスを公開する作業などを指す。デプロイの方法は、利用できるようにしたいサービスの種類やサーバーの設定、環境などによって異なる。


データベース接続クライアント(説明、代表的なもの) 

説明　データベース接続クライアント（データベースせつぞくクライアント）とは、データベース管理システム (DBMS) や関係データベース管理システム (RDBMS) 上のデータを容易に扱うためのソフトウェアである。

代表的なもの　
MySQL
SQLite
PostgreSQL
MariaDB
Oracle Database
Microsofr SQL Server
Web SQL
Indexed DB
Redis
MongoDB


Gitホスティングサービス(説明、代表的なもの) 

説明　gitは分散型のバージョン管理システムのことです。例えばWeb制作や業務アプリケーションの開発などを行う際、一人で完成するものはなく、複数人で開発案件の進捗を確認しながらすすめていくのが普通です。一人で開発している時はまだいいのですが、チームで開発を行っている時はソースコードの管理が煩雑になってしまうことも多くなっていきます。そういった時に役立つのが、バージョン管理システムです。バージョン管理システムとは、プロジェクトの全ファイルを管理してくれるツールのことです。

代表的なもの　
GitHub
GitLab
BitBucket
Assembla
Phabricator

チケット管理ツール(説明、代表的なもの) 

説明　チケット管理とは、実施するべき作業や課題を「チケット」として管理する方法です。 発生日や作業内容、優先度、担当者や期日を登録して管理します。

代表的なもの 
Wrike
Asana
Backlog
JIRA
Redmine
Planio
Agilefant
Brabio!
Trello
Jooto
Redbooth
Wunderlist
Todoist

DBのJOINとは 複数テーブルの結合を行いたいときに使用する命令です。テーブルを結合して、ひとまとめにできるわけですね!そしてこの「JOIN」の種類は大きく分けると、クロス結合、内部結合、外部結合と3種類存在する。

SEO  SEOとは「検索エンジン最適化（Search Engine Optimization）」の頭文字を取った略称で、優良な被リンクを集めたり（外部施策）、ユーザーに価値あるコンテンツを提供し、適正に検索エンジンにページ内容を理解・評価されるよう技術的にWebページを最適化（内部施策）することで、GoogleやYahoo!などの検索エンジンでキーワードが検索された場合に、自サイトが上位に表示されるようにすることを意味します。


